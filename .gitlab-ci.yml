---
# yamllint disable rule:line-length
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# Global settings
image: "adorsys/ci-build:latest"

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
  - "Lint"
  - "Compile" # build jar and provide as artifact
  - "Test" # run tests and code quality checks
  - "Version Control" # parse pom.xml and change versions on sandbox project
  - "Release" # release
  - "Package" # dockerize jar and push to docker registry
  - "Clone to github"

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables:
  GIT_SUBMODULE_STRATEGY: normal
  # Online banking
  DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING: "xs2a-online-banking"
  DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI: "xs2a-online-banking-ui"
  DOCKER_IMAGE_NAME_XS2A_TPP_UI: "xs2a-bank-tpp-ui"
  DOCKER_IMAGE_NAME_XS2A_ADMIN_UI: "xs2a-bank-admin-ui"
  DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI: "xs2a-bank-devportal"
  DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER: "xs2a-tpp-rest-server"
  DOCKER_IMAGE_NAME_XS2A_ADMIN_REST_SERVER: "xs2a-admin-rest-server"

  ###########################
  # Public Dockerhub Images #
  ###########################

  DOCKERHUB_REGISTRY: "gitlab-registry.adorsys.de"

  DOCKERHUB_NAMESPACE: "adorsys/xs2a/psd2-dynamic-sandbox"

  ###########################
  # Build variables         #
  ###########################

  # Defaults for Java 11
  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  script:
    - jabba use $BUILD_JAVA_VERSION
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - make build-java-services
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository

.release_java_private: &release_java_private
  script:
    - jabba use $BUILD_JAVA_VERSION
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp --settings scripts/mvn-release-settings.xml -Pgitlab-maven -DskipTests -U deploy
  cache:
    key: "Java_${CI_COMMIT_REF_SLUG}"
    paths:
      - /builds/adorsys/xs2a/psd2-dynamic-sandbox/.m2/repository

# Build docker images and put them to DOCKER HUB repo
.build_and_push_dockerhub_images_private:
  &build_and_push_dockerhub_images_private
  script:
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}" online-banking/online-banking-app
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}" oba-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}" tpp-app/tpp-rest-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ADMIN_REST_SERVER}:${DOCKER_TAG}" admin-app/admin-rest-server
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}" tpp-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ADMIN_UI}:${DOCKER_TAG}" admin-ui
    - docker build -t "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}" developer-portal-ui

    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ONLINE_BANKING_UI}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_REST_SERVER}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ADMIN_REST_SERVER}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_TPP_UI}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_ADMIN_UI}:${DOCKER_TAG}"
    - docker push "${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_XS2A_DEVPORTAL_UI}:${DOCKER_TAG}"
    - docker logout

.sync_changes_github: &sync_changes_github
  image: alpine/git
  dependencies: []
  script:
    - git config --global user.name "$GITHUB_USERNAME"
    - git remote add github https://$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git #Token expires on Sat, 11.05.2024
    - for branch in $(git branch -r | grep -E "origin/.*(release-${GITHUB_PROJECT_CLONE_VERSION}.*|support-${GITHUB_PROJECT_CLONE_VERSION}.x).*"); do
        branch=${branch#origin/};
        git checkout $branch;
        git push github $branch --force;
      done
# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

#-------------------------------------------------------------------
# Lint
#-------------------------------------------------------------------

Lint (Dockerfiles):
  image: docker
  stage: "Lint"
  services:
    - docker:dind
  tags:
    - aws
  except:
    - schedules
    - support-6.x
    - master-6.x
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - apk add make
    - echo "Run Dockerfiles lint"
    - make lint-dockerfiles

Lint (OBA UI):
  image: node:16.13.2-buster-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run OBA lint"
    - make lint-oba-ui

Lint (TPP UI):
  image: node:16.13.2-buster-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run TPP lint"
    - make lint-tpp-ui

Lint (Admin UI):
  image: node:16.13.2-buster-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run Admin lint"
    - make lint-admin-ui

Lint (DevPortal UI):
  image: node:16.13.2-buster-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run Devportal UI lint"
    - make lint-developer-portal-ui

Lint (OBA Backend):
  image: debian:stable-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install --no-install-recommends jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run OBA backend lint"
    - make lint-online-banking

Lint (TPP Backend):
  image: debian:stable-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run TPP backend lint"
    - make lint-tpp-rest-server

Lint (Admin Backend):
  image: debian:stable-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint
    - echo "Run Admin backend lint"
    - make lint-admin-rest-server

Lint (Docker Compose):
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt update && apt install yamllint docker-compose make -yq
    - echo "Run Docker compose lint"
    - make lint-docker-compose

Lint (PMD CPD):
  image: maven:3.6-jdk-11-slim
  stage: "Lint"
  except:
    - schedules
    - support-6.x
    - master-6.x
  script:
    - apt update && apt install make -yq
    - echo "Test java code for PMD and CPD"
    - make lint-pmd-cpd-report
  cache: {}
  artifacts:
    paths:
      - "qa/pmd/pmd-ruleset.xml"
      - "**/**/*/pmd.html"
      - "**/*/pmd.xml"
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

#-------------------------------------------------------------------
# Compile
#-------------------------------------------------------------------

Build (OBA UI):
  image: node:16.13.2-buster-slim
  stage: "Compile"
  except:
    - schedules
  script:
    - apt-get update && apt-get install make libxml2-utils jq -yq
    - echo "Update info.json"
    - VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - jq --arg VERSION "$VERSION"  --arg BUILD_ID "$CI_PIPELINE_ID" '.version = $VERSION | .build_number = $BUILD_ID' oba-ui/info.json >> info.json
    - mv info.json oba-ui/info.json
    - echo "Run OBA UI  Build"
    - make npm-install-oba-ui
  cache: {}
  artifacts:
    paths:
      - "oba-ui/dist"
      - "oba-ui/info.json"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Build (TPP UI):
  image: node:16.13.2-buster-slim
  stage: "Compile"
  except:
    - schedules
  script:
    - apt-get update && apt-get install make jq libxml2-utils -yq
    - echo "Update info.json"
    - VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - jq --arg VERSION "$VERSION"  --arg BUILD_ID "$CI_PIPELINE_ID" '.version = $VERSION | .build_number = $BUILD_ID' tpp-ui/info.json >> info.json
    - mv info.json oba-ui/info.json
    - echo "Run TPP UI  Build"
    - make npm-install-tpp-ui
  cache: {}
  artifacts:
    paths:
      - "tpp-ui/dist"
      - "tpp-ui/info.json"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Build (Admin UI):
  image: node:16.13.2-buster-slim
  stage: "Compile"
  except:
    - schedules
  script:
    - apt-get update && apt-get install make jq libxml2-utils -yq
    - echo "Update info.json"
    - VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - jq --arg VERSION "$VERSION"  --arg BUILD_ID "$CI_PIPELINE_ID" '.version = $VERSION | .build_number = $BUILD_ID' admin-ui/info.json >> info.json
    - mv info.json oba-ui/info.json
    - echo "Run Admin UI Build"
    - make npm-install-admin-ui
  cache: {}
  artifacts:
    paths:
      - "admin-ui/dist"
      - "admin-ui/info.json"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Build (DevPortal UI):
  image: node:16.13.2-buster-slim
  stage: "Compile"
  except:
    - schedules
  script:
    - apt-get update && apt-get install zip make jq libxml2-utils -yq
    - echo "Update info.json"
    - VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - jq --arg VERSION "$VERSION"  --arg BUILD_ID "$CI_PIPELINE_ID" '.version = $VERSION | .build_number = $BUILD_ID' developer-portal-ui/info.json >> info.json
    - mv info.json developer-portal-ui/info.json
    - echo "Update postman test files"
    - scripts/.update-postman-test-files.sh
    - echo "Run Devportal UI Build"
    - make npm-install-developer-portal-ui
  cache: {}
  artifacts:
    paths:
      - "developer-portal-ui/dist"
      - "developer-portal-ui/info.json"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

Build (Modelbank):
  <<: *build_java
  stage: "Compile"
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  artifacts:
    paths:
      - "online-banking/online-banking-app/target/online-banking-app.jar"
      - "certificate-generator/target/certificate-generator.jar"
      - "tpp-app/tpp-rest-server/target/tpp-rest-server.jar"
      - "admin-app/admin-rest-server/target/admin-rest-server.jar"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"
    expire_in: "1 day"

#-------------------------------------------------------------------
# Test
#-------------------------------------------------------------------

Test (Javadoc):
  stage: "Test"
  except:
    - schedules
  needs: ["Build (Modelbank)"]
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.11"
  script:
    - jabba use ${JAVA_VERSION}
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -ntp --settings scripts/mvn-release-settings.xml -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc

Test (Unit Tests):
  image: maven:3.6-jdk-11-slim
  stage: "Test"
  except:
    - schedules
  needs: ["Build (Modelbank)"]
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  script:
    - apt update && apt install make -yq
    - echo "Run unit tests for backend"
    - make unit-tests-backend

Test (DevPortal UI Tests):
  image: node:16.13.2-buster-slim
  stage: "Test"
  except:
    - schedules
  needs: ["Build (DevPortal UI)"]
  variables:
    CHROME_BIN: "/usr/bin/chromium"
  script:
    - apt-get update && apt-get install make chromium chromium-l10n -yq
    - echo 'Unit tests Devportal UI'
    - make unit-tests-developer-portal-ui

Test (TPP UI Tests):
  image: node:16.13.2-buster-slim
  stage: "Test"
  except:
    - schedules
  needs: ["Build (TPP UI)"]
  variables:
    CHROME_BIN: "/usr/bin/chromium"
  script:
    - apt-get update && apt-get install make chromium chromium-l10n -yq
    - echo 'Unit tests TPP UI'
    - make unit-tests-tpp-ui

Test (Admin UI Tests):
  image: node:16.13.2-buster-slim
  stage: "Test"
  except:
    - schedules
  needs: ["Build (Admin UI)"]
  variables:
    CHROME_BIN: "/usr/bin/chromium"
  script:
    - apt-get update && apt-get install make chromium chromium-l10n -yq
    - echo 'Unit tests Admin UI'
    - make unit-tests-admin-ui

Test (OBA UI Tests):
  image: node:16.13.2-buster-slim
  stage: "Test"
  except:
    - schedules
  needs: ["Build (OBA UI)"]
  variables:
    CHROME_BIN: "/usr/bin/chromium"
  script:
    - apt-get update && apt-get install make chromium chromium-l10n -yq
    - echo 'Unit tests OBA UI'
    - make unit-tests-oba-ui

Postman Tests:
  stage: "Test"
  only:
    - schedules
  image:
    name: postman/newman_alpine33
    entrypoint: [""]
  script:
    - npm config set unsafe-perm true
    - npm install -g newman-reporter-html
    - cd postman
    - newman run postman_collection.json -e postman_environment_dev.json -g postman_global_variable.json --reporters cli,html --reporter-html-template html_report_template.hbs --reporter-html-export postman-tests-report.html --suppress-exit-code
  artifacts:
    when: always
    paths:
      - "postman/postman-tests-report.html"
    expire_in: "10 day"

#-------------------------------------------------------------------
# Package
#-------------------------------------------------------------------

Build and push to private repo (support-6x):
  stage: "Package"
  except:
    - schedules
  only:
    - support-6.x
  services:
    - docker:dind
  tags:
    - aws
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_TAG: support6x
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/psd2-dynamic-sandbox"
  <<: *build_and_push_dockerhub_images_private

Build and push to private repo (tags):
  stage: "Package"
  only:
    - tags
  services:
    - docker:dind
  tags:
    - aws
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
    DOCKER_TAG: ${CI_COMMIT_TAG}
    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de
    DOCKERHUB_NAMESPACE: "adorsys/xs2a/psd2-dynamic-sandbox"
  <<: *build_and_push_dockerhub_images_private

#-------------------------------------------------------------------
# Release
#-------------------------------------------------------------------

Release snapshot artifacts (support-6x):
  stage: "Release"
  only:
    - support-6.x
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *release_java_private

Release snapshot artifacts (tags):
  stage: "Release"
  only:
    - tags
  except:
    - schedules
  cache: {}
  variables:
    BUILD_JAVA_VERSION: system@1.11
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *release_java_private

#-------------------------------------------------------------------
# Version Control
#-------------------------------------------------------------------

Change dependencies versions (support-6.x):
  stage: "Version Control"
  image: alpine
  only:
    refs:
      - support-6.x
    changes:
      - pom.xml
  except:
    - schedules
  before_script:
    - apk add git openssh-client
    - git config --global user.name $GITLAB_USER_NAME
    - git config --global user.email $GITLAB_USER_EMAIL
    - mkdir -p ~/sandbox
    - cd ~/sandbox
    - git clone https://push-token:$PUSH_TOKEN@git.adorsys.de/adorsys/xs2a/sandbox-openshift.git
    - cd sandbox-openshift
    - git branch -a
    - git checkout master
  script:
    - XS2A_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<xs2a.version>" | awk -F"[<>]" '//{print $3}')
    - CONNECTOR_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<connector.version>" | awk -F"[<>]" '//{print $3}')
    - LEDGERS_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<ledgers.version>" | awk -F"[<>]" '//{print $3}')
    - >
      if [[ "$XS2A_VERSION" =~ "\d{1,2}\.\d{1,2}-SNAPSHOT" ]]; then
      XS2A_VERSION=support14x;
      fi
    - >
      if [[ "$CONNECTOR_VERSION" =~ "\d{1,2}\.\d{1,2}-SNAPSHOT" ]]; then
      CONNECTOR_VERSION=support14x;
      fi
    - >
      if [[ "$LEDGERS_VERSION" =~ "\d{1,2}\.\d{1,2}-SNAPSHOT" ]]; then
      LEDGERS_VERSION=develop;
      fi
    - |
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-support6x-k8s/certificate-generator/env.yaml
      sed -i "s/tag: .*$/tag: \"$LEDGERS_VERSION\"/" env/adorsys-modelbank-support6x-k8s/keycloak/env.yaml
      sed -i "s/tag: .*$/tag: \"$LEDGERS_VERSION\"/" env/adorsys-modelbank-support6x-k8s/ledgers/env.yaml
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-support6x-k8s/xs2a-aspsp-profile/env.yaml
      sed -i "s/tag: .*$/tag: \"$CONNECTOR_VERSION\"/" env/adorsys-modelbank-support6x-k8s/xs2a-connector/env.yaml
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-support6x-k8s/xs2a-consent-management/env.yaml
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-support6x-k8s/xs2a-embedded/env.yaml

  after_script:
    - cd ~/sandbox/sandbox-openshift
    - git status
    - git add .
    - git commit -m "changed dependencies versions"
    - git push origin master

Change dependencies versions (demo):
  stage: "Version Control"
  image: alpine
  rules:
    - if: $CI_COMMIT_TAG =~ /6\..*/
      # changes:
      # - "pom.xml"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  before_script:
    - apk add git openssh-client
    - git config --global user.name $GITLAB_USER_NAME
    - git config --global user.email $GITLAB_USER_EMAIL
    - mkdir -p ~/sandbox
    - cd ~/sandbox
    - git clone https://push-token:$PUSH_TOKEN@git.adorsys.de/adorsys/xs2a/sandbox-openshift.git
    - cd sandbox-openshift
    - git branch -a
    - git checkout master
  script:
    - XS2A_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<xs2a.version>" | awk -F"[<>]" '//{print $3}')
    - CONNECTOR_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<connector.version>" | awk -F"[<>]" '//{print $3}')
    - LEDGERS_VERSION=$(cat $CI_PROJECT_DIR/pom.xml | grep "<ledgers.version>" | awk -F"[<>]" '//{print $3}')
    - |
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-demo-k8s/certificate-generator/env.yaml
      sed -i "s/tag: .*$/tag: \"$LEDGERS_VERSION\"/" env/adorsys-modelbank-demo-k8s/keycloak/env.yaml
      sed -i "s/tag: .*$/tag: \"$LEDGERS_VERSION\"/" env/adorsys-modelbank-demo-k8s/ledgers/env.yaml
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-demo-k8s/xs2a-aspsp-profile/env.yaml
      sed -i "s/tag: .*$/tag: \"$CONNECTOR_VERSION\"/" env/adorsys-modelbank-demo-k8s/xs2a-connector/env.yaml
      sed -i "s/tag: .*$/tag: \"$XS2A_VERSION\"/" env/adorsys-modelbank-demo-k8s/xs2a-consent-management/env.yaml


      sed -i "s/tag: .*$/tag: \"$CI_COMMIT_TAG\"/" env/adorsys-modelbank-demo-k8s/modelbank-admin/env.yaml
      sed -i "s/tag: .*$/tag: \"$CI_COMMIT_TAG\"/" env/adorsys-modelbank-demo-k8s/modelbank-devportal/env.yaml
      sed -i "s/tag: .*$/tag: \"$CI_COMMIT_TAG\"/" env/adorsys-modelbank-demo-k8s/modelbank-oba/env.yaml
      sed -i "s/tag: .*$/tag: \"$CI_COMMIT_TAG\"/" env/adorsys-modelbank-demo-k8s/modelbank-tpp/env.yaml
  after_script:
    - cd ~/sandbox/sandbox-openshift
    - git status
    - git add .
    - git commit -m "changed dependencies versions"
    - git push origin master

Clone to github:
  stage: "Clone to github"
  <<: *sync_changes_github
  image: alpine/git:latest
  only:
    - /^.*release-${GITHUB_PROJECT_CLONE_VERSION}.*$/
    - support-${GITHUB_PROJECT_CLONE_VERSION}.x
    - support-6.x
  except:
    - schedules
  variables:
    GITHUB_USERNAME: adorsys
    GITHUB_REPOSITORY: adorsys/XS2A-Sandbox
    GITHUB_PROJECT_CLONE_VERSION: "6"
